{
  "app": {
    "title": "Tank Level Monitoring",
    "loading": "Loading dashboard data...",
    "settings": "API Settings",
    "refresh": "Refresh"
  },
  "auth": {
    "login": "Login",
    "register": "Register",
    "logout": "Logout",
    "loginTitle": "Login to Tank Monitor",
    "loginSubtitle": "Enter your credentials to access your dashboard",
    "registerTitle": "Create an Account",
    "registerSubtitle": "Sign up to start monitoring your tanks",
    "username": "Username",
    "password": "Password",
    "email": "Email",
    "confirmPassword": "Confirm Password",
    "fullName": "Full Name",
    "company": "Company",
    "loginButton": "Login",
    "registerButton": "Register",
    "loggingIn": "Logging in...",
    "creatingAccount": "Creating Account...",
    "noAccount": "Don't have an account?",
    "haveAccount": "Already have an account?",
    "loginFailed": "Login failed. Please check your credentials.",
    "featuresTitle": "Why Choose Tank Monitor?",
    "featuresSubtitle": "Our platform offers powerful tools to monitor and analyze your tank levels",
    "features": {
      "realtime": {
        "title": "Real-time Monitoring",
        "description": "Track tank levels in real-time with accurate data visualization and alerts"
      },
      "analytics": {
        "title": "Advanced Analytics",
        "description": "Gain insights with comprehensive analytics and historical data trends"
      },
      "anomaly": {
        "title": "Anomaly Detection",
        "description": "Automatically detect unusual patterns with our machine learning algorithms"
      },
      "multilingual": {
        "title": "Multilingual Support",
        "description": "Use the platform in your preferred language with full Arabic support"
      }
    }
  },
  "dashboard": {
    "dashboard": "Dashboard",
    "analytics": "Analytics",
    "anomalies": "Anomalies",
    "reportedAnomalies": "Reported Anomalies",
    "settings": "Settings",
    "subscription": "Subscription",
    "collapseMenu": "Collapse Menu",
    "timeRange": "Time Range",
    "refresh": "Refresh",
    "apiSettings": "API Settings",
    "days7": "Last 7 days",
    "days30": "Last 30 days",
    "months3": "Last 3 months",
    "months6": "Last 6 months",
    "months12": "Last 12 months",
    "premium": "Premium"
  },
  "tanks": {
    "addReading": "Add Reading",
    "currentLevel": "Current Level",
    "addButton": "Add",
    "recentLevels": "Recent Tank Levels (Last 3 Days)",
    "historicalLevels": "Historical Tank Levels",
    "level": "Level",
    "minLevel": "Min Level",
    "maxLevel": "Max Level",
    "avgLevel": "Avg Level",
    "lastUpdated": "Last Updated"
  },
  "anomalies": {
    "noAnomalies": "No Anomalies Detected",
    "noAnomaliesDesc": "No anomalies were detected in the selected time range.",
    "anomalyDetection": "Anomaly Detection",
    "upgradeRequired": "Anomaly Detection Requires Upgrade",
    "upgradeDesc": "Anomaly detection is available with Basic and Premium subscription plans.",
    "upgradeButton": "Upgrade Subscription",
    "anomalyChart": "Anomaly Detection Chart",
    "anomalyList": "Detected Anomalies",
    "timestamp": "Timestamp",
    "tankId": "Tank ID",
    "confidence": "Confidence",
    "reportMissedAnomaly": "Report Missed Anomaly",
    "reportForm": {
      "title": "Report Anomaly",
      "timestamp": "Date & Time",
      "level": "Tank Level",
      "levelPlaceholder": "Enter tank level value",
      "tankId": "Tank ID",
      "notes": "Notes",
      "notesPlaceholder": "Describe why you think this is an anomaly",
      "submit": "Submit Report",
      "successMessage": "Anomaly reported successfully!",
      "levelRequired": "Tank level is required",
      "errorReporting": "Error reporting anomaly"
    },
    "userList": {
      "title": "User-Reported Anomalies",
      "filterByStatus": "Filter by status",
      "all": "All",
      "pending": "Pending",
      "confirmed": "Confirmed",
      "rejected": "Rejected",
      "reportNew": "Report New",
      "reportFirst": "Report Your First Anomaly",
      "noAnomalies": "No reported anomalies yet",
      "timestamp": "Date & Time",
      "level": "Level",
      "tankId": "Tank ID",
      "notes": "Notes",
      "status": "Status",
      "actions": "Actions",
      "confirm": "Confirm",
      "reject": "Reject",
      "errorFetching": "Error fetching reported anomalies",
      "errorUpdating": "Error updating anomaly status"
    },
    "modelFeedback": {
      "title": "Model Performance",
      "totalReported": "Total Reported",
      "modelAccuracy": "Model Accuracy",
      "falseNegativesRate": "False Negatives",
      "reportedAnomaliesBreakdown": "Reported Anomalies Breakdown",
      "count": "Count",
      "noData": "No model feedback data available",
      "errorFetching": "Error fetching model feedback",
      "howItWorks": "How It Works",
      "explanation": "User-reported anomalies help improve the anomaly detection model:",
      "confirmedAnomalies": "Confirmed Anomalies",
      "confirmedExplanation": "Anomalies that were missed by the model but confirmed by an administrator.",
      "rejectedAnomalies": "Rejected Anomalies",
      "rejectedExplanation": "Reports that were determined not to be actual anomalies.",
      "pendingAnomalies": "Pending Anomalies",
      "pendingExplanation": "Reports that are waiting for administrator review."
    }
  },
  "subscription": {
    "choosePlan": "Choose Your Subscription Plan",
    "planDesc": "Select the plan that best fits your monitoring needs",
    "upgradeNotice": "You need at least a {{tier}} subscription to access this feature.",
    "monthly": "Monthly",
    "yearly": "Yearly",
    "save": "Save 15%",
    "currentPlan": "Current Plan",
    "subscribe": "Subscribe",
    "upgrade": "Upgrade",
    "features": {
      "tanks": "Up to {{count}} tanks",
      "history": "{{count}} days of history",
      "anomalyDetection": "Anomaly detection",
      "prioritySupport": "Priority support",
      "customReports": "Custom reports"
    },
    "tiers": {
      "free": "Free",
      "basic": "Basic",
      "premium": "Premium"
    }
  },
  "errors": {
    "fetchError": "Error fetching data: {{message}}. Check your API configuration.",
    "addError": "Error adding tank level reading: {{message}}"
  },
  "common": {
    "loading": "Loading...",
    "cancel": "Cancel",
    "save": "Save",
    "submit": "Submit",
    "submitting": "Submitting...",
    "actions": "Actions",
    "delete": "Delete",
    "edit": "Edit",
    "add": "Add",
    "all": "All",
    "language": "Language",
    "refresh": "Refresh"
  },
  "cloudConnections": {
    "title": "Cloud Connections",
    "description": "Configure connections to third-party cloud services",
    "mqtt": "MQTT",
    "restApi": "REST API",
    "graphql": "GraphQL",
    "opcua": "OPC UA",
    "modbus": "Modbus",
    "restApiConfig": "REST API Configuration",
    "graphqlConfig": "GraphQL Configuration",
    "opcuaConfig": "OPC UA Configuration",
    "modbusConfig": "Modbus Configuration",
    "comingSoon": "Configuration for this protocol is coming soon."
  },
  "mqtt": {
    "configuration": "MQTT Configuration",
    "enabled": "Enable MQTT",
    "broker": "Broker Address",
    "brokerHelp": "MQTT broker hostname or IP address",
    "port": "Port",
    "portHelp": "Default port is 1883 (or 8883 for SSL)",
    "username": "Username",
    "usernameHelp": "Leave empty if authentication is not required",
    "password": "Password",
    "passwordHelp": "Leave empty if authentication is not required",
    "clientId": "Client ID",
    "clientIdHelp": "A unique identifier for this connection",
    "topicPrefix": "Topic Prefix",
    "topicPrefixHelp": "Prefix for all topics (e.g., 'tanks')",
    "useSSL": "Use SSL/TLS",
    "connect": "Connect",
    "disconnect": "Disconnect",
    "status": "Connection Status",
    "connectedTo": "Connected to {{broker}}:{{port}}",
    "notConnected": "Not connected to MQTT broker",
    "lastError": "Last error",
    "receivedData": "Received Data",
    "noData": "No data received from MQTT broker yet",
    "tankId": "Tank ID",
    "level": "Level"
  },
  "rest": {
    "configuration": "REST API Configuration",
    "enabled": "Enable REST API",
    "baseUrl": "Base URL",
    "baseUrlHelp": "Base URL of the REST API (e.g., https://api.example.com)",
    "authType": "Authentication Type",
    "authTypes": {
      "none": "None",
      "apiKey": "API Key",
      "basic": "Basic Auth",
      "oauth2": "OAuth 2.0"
    },
    "apiKey": "API Key",
    "apiKeyHelp": "API key for authentication",
    "username": "Username",
    "usernameHelp": "Username for authentication",
    "password": "Password",
    "passwordHelp": "Password for authentication",
    "endpoints": "API Endpoints",
    "tanksEndpoint": "Tanks Endpoint",
    "tanksEndpointHelp": "Endpoint to get list of tanks (e.g., /tanks)",
    "levelsEndpoint": "Levels Endpoint",
    "levelsEndpointHelp": "Endpoint to get tank levels (e.g., /tanks/{tank_id}/levels)",
    "authEndpoint": "Auth Endpoint",
    "authEndpointHelp": "Endpoint for OAuth authentication (e.g., /auth/token)",
    "headers": "Custom Headers",
    "headerKey": "Header Name",
    "headerValue": "Header Value",
    "pollingInterval": "Polling Interval (seconds)",
    "pollingIntervalHelp": "How often to fetch data from the API (5-3600 seconds)",
    "testConnection": "Test Connection",
    "status": "Connection Status",
    "connectedTo": "Connected to {{url}}",
    "notConnected": "Not connected to REST API",
    "lastError": "Last error",
    "receivedData": "Received Data",
    "noData": "No data received from REST API yet",
    "tankId": "Tank ID",
    "tankName": "Tank Name",
    "level": "Level",
    "fetchData": "Fetch Data"
  },
  "graphql": {
    "configuration": "GraphQL Configuration",
    "enabled": "Enable GraphQL",
    "endpoint": "GraphQL Endpoint",
    "endpointHelp": "URL of the GraphQL endpoint (e.g., https://api.example.com/graphql)",
    "authType": "Authentication Type",
    "authTypes": {
      "none": "None",
      "apiKey": "API Key",
      "basic": "Basic Auth",
      "oauth2": "OAuth 2.0",
      "jwt": "JWT"
    },
    "apiKey": "API Key",
    "apiKeyHelp": "API key for authentication",
    "username": "Username",
    "usernameHelp": "Username for authentication",
    "password": "Password",
    "passwordHelp": "Password for authentication",
    "authEndpoint": "Auth Endpoint",
    "authEndpointHelp": "Endpoint for OAuth authentication (e.g., https://api.example.com/auth)",
    "queries": "GraphQL Queries",
    "tanksQuery": "Tanks Query",
    "tankLevelQuery": "Tank Level Query",
    "pollingInterval": "Polling Interval (seconds)",
    "pollingIntervalHelp": "How often to fetch data from the API (5-3600 seconds)",
    "testConnection": "Test Connection",
    "status": "Connection Status",
    "connectedTo": "Connected to {{url}}",
    "notConnected": "Not connected to GraphQL API",
    "lastError": "Last error",
    "receivedData": "Received Data",
    "noData": "No data received from GraphQL API yet",
    "tankId": "Tank ID",
    "tankName": "Tank Name",
    "level": "Level",
    "fetchData": "Fetch Data"
  },
  "opcua": {
    "configuration": "OPC UA Configuration",
    "enabled": "Enable OPC UA",
    "endpoint": "OPC UA Endpoint",
    "endpointHelp": "OPC UA server endpoint (e.g., opc.tcp://localhost:4840/freeopcua/server/)",
    "securityMode": "Security Mode",
    "securityModes": {
      "none": "None",
      "sign": "Sign",
      "signAndEncrypt": "Sign and Encrypt"
    },
    "securityPolicy": "Security Policy",
    "securityPolicies": {
      "none": "None",
      "basic128Rsa15": "Basic128Rsa15",
      "basic256": "Basic256",
      "basic256Sha256": "Basic256Sha256"
    },
    "certificatePath": "Certificate Path",
    "certificatePathHelp": "Path to client certificate file",
    "privateKeyPath": "Private Key Path",
    "privateKeyPathHelp": "Path to client private key file",
    "username": "Username",
    "usernameHelp": "Username for authentication",
    "password": "Password",
    "passwordHelp": "Password for authentication",
    "namespace": "Namespace",
    "namespaceHelp": "OPC UA namespace URI",
    "nodePaths": "Node Paths",
    "tanksNodePath": "Tanks Node Path",
    "tankLevelNodePath": "Tank Level Node Path",
    "pollingInterval": "Polling Interval (seconds)",
    "pollingIntervalHelp": "How often to fetch data from the server (5-3600 seconds)",
    "testConnection": "Test Connection",
    "connection": "Connection",
    "connect": "Connect",
    "disconnect": "Disconnect",
    "startMonitoring": "Start Monitoring",
    "stopMonitoring": "Stop Monitoring",
    "monitoringStatus": "Monitoring Status",
    "monitoring": "Monitoring",
    "notMonitoring": "Not Monitoring",
    "connectedTo": "Connected to {{url}}",
    "notConnected": "Not connected to OPC UA server",
    "lastError": "Last error",
    "receivedData": "Received Data",
    "noData": "No data received from OPC UA server yet",
    "tankId": "Tank ID",
    "tankName": "Tank Name",
    "level": "Level"
  },
  "direction": "ltr",
  "navigation": {
    "dashboard": "Dashboard",
    "enterprises": "Enterprises",
    "cloudConnections": "Cloud Connections",
    "anomalies": "Anomalies",
    "reportAnomaly": "Report Anomaly",
    "modelFeedback": "Model Feedback",
    "subscription": "Subscription",
    "settings": "Settings",
    "collapseMenu": "Collapse Menu",
    "analytics": "Analytics"
  },
  "user": {
    "admin": "Admin",
    "profile": "Profile",
    "settings": "Settings"
  },
  "enterprise": {
    "title": "Enterprise Management",
    "description": "Manage your enterprises and sites",
    "enterprises": "Enterprises",
    "enterprise": "Enterprise",
    "sites": "Sites",
    "site": "Site",
    "sitesFor": "Sites for {{enterprise}}",
    "noEnterprises": "No enterprises found",
    "noSites": "No sites found for this enterprise",
    "selectEnterprise": "Select an enterprise to view its sites",
    "addEnterprise": "Add Enterprise",
    "editEnterprise": "Edit Enterprise",
    "addSite": "Add Site",
    "editSite": "Edit Site",
    "deleteEnterprise": "Delete Enterprise",
    "deleteEnterpriseConfirm": "Are you sure you want to delete this enterprise? This will also delete all sites associated with it.",
    "deleteSite": "Delete Site",
    "deleteSiteConfirm": "Are you sure you want to delete this site?",
    "name": "Name",
    "description": "Description",
    "contactEmail": "Contact Email",
    "contactPhone": "Contact Phone",
    "address": "Address",
    "logoUrl": "Logo URL",
    "siteName": "Site Name",
    "location": "Location",
    "locationPlaceholder": "e.g., 123 Main St, City, Country",
    "coordinates": "Coordinates",
    "latitude": "Latitude",
    "longitude": "Longitude"
  },
  "dashboard": {
    "title": "Tank Level Dashboard",
    "description": "Monitor and analyze your tank levels",
    "filterByLocation": "Filter by Location",
    "dataFilters": "Data Filters",
    "timeRange": "Time Range",
    "last7Days": "Last 7 days",
    "last30Days": "Last 30 days",
    "last3Months": "Last 3 months",
    "last6Months": "Last 6 months",
    "last12Months": "Last 12 months",
    "tankId": "Tank ID",
    "addManualReading": "Add Manual Reading",
    "tankLevel": "Tank Level",
    "addReading": "Add Reading",
    "recentTankLevels": "Recent Tank Levels",
    "historicalTankLevels": "Historical Tank Levels ({{days}} days)",
    "detectedAnomalies": "Detected Anomalies",
    "date": "Date",
    "time": "Time",
    "level": "Level",
    "anomalyScore": "Anomaly Score",
    "errorFetchingData": "Error fetching data: {{error}}",
    "errorAddingReading": "Error adding reading: {{error}}"
  }
}
